
using ChatServer.Constants;
using ChatServer.Repositories.Attributes;

namespace ChatServer.Models
{

    [Table("messages")]
    public class Message
    {
        /// <summary>
        /// ID ch√≠nh c·ªßa tin nh·∫Øn trong database (Primary Key).
        /// </summary>
        [Key]
        public long id { get; set; }

        /// <summary>
        /// ID c·ªßa cu·ªôc h·ªôi tho·∫°i, gi√∫p nh√≥m c√°c tin nh·∫Øn l·∫°i.
        /// </summary>
        public string? conversation_id { get; set; }

        /// <summary>
        /// ID c·ªßa ng∆∞·ªùi g·ª≠i.
        /// </summary>
        public int sender_id { get; set; }

        /// <summary>
        /// ID c·ªßa ng∆∞·ªùi nh·∫≠n ho·∫∑c nh√≥m nh·∫≠n. C√≥ th·ªÉ null.
        /// </summary>
        public int? target_id { get; set; }

        /// <summary>
        /// N·ªôi dung tin nh·∫Øn (text, URL h√¨nh ·∫£nh, URL file).
        /// </summary>
        public required string content { get; set; }

        /// <summary>
        /// Lo·∫°i n·ªôi dung c·ªßa tin nh·∫Øn.
        /// </summary>
        public MESSAGE_TYPE message_type { get; set; }

        /// <summary>
        /// Th·ªùi gian tin nh·∫Øn ƒë∆∞·ª£c t·∫°o (UTC).
        /// </summary>
        public DateTime created_at { get; set; }

        /// <summary>
        /// Tr·∫°ng th√°i c·ªßa tin nh·∫Øn (g·ª≠i, ƒë√£ nh·∫≠n, ƒë√£ xem...).
        /// </summary>
        public MessageStatus status { get; set; }

        [NotMapped] // üëà Thu·ªôc t√≠nh n√†y s·∫Ω ƒë∆∞·ª£c b·ªè qua khi INSERT/UPDATE
        public string? ExtraInfo { get; set; }
    }

    public enum MessageStatus { Sending, Sent, Delivered, Read, Failed }
}